/*

Validate if a given string is numeric.

Examples:

"0" => true
" 0.1 " => true
"abc" => false
"1 a" => false
"2e10" => true
Return 0 / 1 ( 0 for false, 1 for true ) for this problem

Clarify the question using “See Expected Output”

Is 1u ( which may be a representation for unsigned integers valid?
For this problem, no.
Is 0.1e10 valid?
Yes
-01.1e-10?
Yes
Hexadecimal numbers like 0xFF?
Not for the purpose of this problem
3. (. not followed by a digit)?
No
Can exponent have decimal numbers? 3e0.1?
Not for this problem.
Is 1f ( floating point number with f as prefix ) valid?
Not for this problem.
How about 1000LL or 1000L ( C++ representation for long and long long numbers )?
Not for this problem.
How about integers preceded by 00 or 0? like 008?
Yes for this problem

*/

Solution:

int Solution::isNumber(const string &A) {
    
    string s = A;    
    if(s.length() == 0){
        return 0;
    }
    while(s[0]==' '){
        s.erase(s.begin());
    }
    while(s[s.length()-1] == ' '){
        s.erase(s.begin()+(s.length()-1));
    }
    
    int flag3 = 1;
    int y = s.length();
    int z = 0;
    string s1 = "";
    string s2 = "";
    int flag4 = 0;
    for(int i = 0; i<y; i++){
        if(s[i] == 'e'){
            flag4 = 4;
            break;
        }
        s1 = s1 + s[i];
        z++;
    }
    if(s1.length() == 0){
        return 0;
    }
    for(int i = z+1; i<y; i++){
        s2 = s2 + s[i];
    }
    if(s1.length() == 0){
        return 0;
    }
    
    if(flag4 == 4 && s2.size() == 0){
        return 0;
    }

    int i = 0;
    if(s1[0] == '-' || s1[0] == '+'){
        if(y == 1){
            return 0;
        }
        i++;
    }
    
    if(s1[z-1] == '.'){
        flag3 = 3;
    }
    if(flag3 != 3){
        int u = 0;
        for(; i<z; i++){
            if(s1[i] == '.' && u<=1){
                u++;
            }
            else if(u>1){
                flag3 = 3;
                break;
            }
            else if((int)s1[i]<48 || (int)s1[i]>57){
                flag3 = 3;
                break;
            }
        }
    }
    if(flag3 != 3){
        int j = 0;
        if(s2[0] == '-' || s2[0] == '+'){
            if(s2.size() == 1){
                return 0;
            }
            j++;
        }
        for(; j<s2.size(); j++){
            if(s2[j] == '.'){
                flag3 = 3;
                break;
            }
            if((int)s2[j]<48 || (int)s2[j]>57){
                flag3 = 3;
                break;
            }
        }
    }

    if(flag3 == 3){
        return 0;
    }
    else{
        return 1;
    }
}
