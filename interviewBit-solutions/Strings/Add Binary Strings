/*

Given two binary strings, return their sum (also a binary string).

Example:

a = "100"

b = "11"
Return a + b = “111”.

*/

Solution:

string Solution::addBinary(string a, string b){
    
    string s = "";
    int n1 = a.length();
    int n2 = b.length();
    
    int j = min(n1, n2);
    int c = 0;
    for(int i = 0; i<j; i++){
        if(c == 0){
            if(a[n1-i-1] == '1' && b[n2-i-1] == '0'){
               s = '1'+s;
           } 
           else if(a[n1-i-1] == '0' && b[n2-i-1] == '1'){
               s = '1'+s;
           } 
           else if(a[n1-i-1] == '0' && b[n2-i-1] == '0'){
               s = '0'+s;
           } 
           else if(a[n1-i-1] == '1' && b[n2-i-1] == '1'){
               s = '0'+s;
               c = 1;
           }
        }
        else if(c == 1){
            if(a[n1-i-1] == '1' && b[n2-i-1] == '0'){
               s = '0'+s;
               c = 1;
           } 
           else if(a[n1-i-1] == '0' && b[n2-i-1] == '1'){
               s = '0'+s;
               c = 1;
           } 
           else if(a[n1-i-1] == '0' && b[n2-i-1] == '0'){
               s = '1'+s;
               c = 0;
           } 
           else if(a[n1-i-1] == '1' && b[n2-i-1] == '1'){
               s = '1'+s;
               c = 1;
           }
        }
    }
    if(a.length() > b.length()){
        for(int k = j; k<a.length(); k++){
            if(c == 1){
                if(a[n1-k-1] == '1'){
                   s = '0'+s;
                   c = 1;
               } 
               else if(a[n1-k-1] == '0'){
                   s = '1'+s;
                   c = 0;
               } 
            }
            else{
                if(a[n1-k-1] == '1'){
                   s = '1'+s;
                   c = 0;
               } 
               else if(a[n1-k-1] == '0'){
                   s = '0'+s;
                   c = 0;
               } 
            }
        }
    }
    else if(a.length() < b.length()){
        for(int k = j; k<b.length(); k++){
            if(c == 1){
                if(b[n2-k-1] == '1'){
                   s = '0'+s;
                   c = 1;
               } 
               else if(b[n2-k-1] == '0'){
                   s = '1'+s;
                   c = 0;
               } 
            }
            else{
                if(b[n2-k-1] == '1'){
                   s = '1'+s;
                   c = 0;
               } 
               else if(b[n2-k-1] == '0'){
                   s = '0'+s;
                   c = 0;
               } 
            }
        }
    }
    else if(a.length() == b.length() && c == 1){
        s = '1' + s;
        c = 0;
    }
    if(c == 1){
        s = '1' + s;
        c = 0;
    }
    return s;
}
