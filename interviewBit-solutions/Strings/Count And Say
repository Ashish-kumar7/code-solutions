/*

The count-and-say sequence is the sequence of integers beginning as follows:

1, 11, 21, 1211, 111221, ...
1 is read off as one 1 or 11.
11 is read off as two 1s or 21.

21 is read off as one 2, then one 1 or 1211.

Given an integer n, generate the nth sequence.

Note: The sequence of integers will be represented as a string.

Example:

if n = 2,
the sequence is 11.

*/

Solution:

string Solution::countAndSay(int n) {
    
    string s = "";
    if(n == 1){
        s = "1";
    }
    else if(n == 2){
        s = "11";
    }
    else if(n == 3){
        s = "21";
    }
    else if(n == 4){
        s = "1211";
    }
    else if(n == 5){
        s = "111221";
    }
    else{
        string t = "111221";
        string u;
        for(int i = 6; i<=n; i++){
            int j = 0;
            u = "";
            while(t[j] != '\0'){
                int c1 = 0;
                char d = t[j];
                while(t[j] == d){
                    c1++;
                    j++;
                }
                if(c1>0){
                    u = u+to_string(c1);
                    u = u+ d;
                }
            }
            t = u;
        }
        s = t;
    }
    return s;
}
